// Mocks generated by Mockito 5.4.0 from annotations
// in ny_times/test/features/article/data/repositories/articles_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/core.dart' as _i6;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ny_times/features/article/data/data_sources/remote/article_remote.dart'
    as _i4;
import 'package:ny_times/features/article/data/models/article_model.dart'
    as _i3;
import 'package:ny_times/features/article/data/repositories/article_repository.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArticleModel_1 extends _i1.SmartFake implements _i3.ArticleModel {
  _FakeArticleModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ArticleRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRemote extends _i1.Mock implements _i4.ArticleRemote {
  MockArticleRemote() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Response<dynamic>> getArticles(_i6.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [params],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getArticles,
            [params],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [ArticleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRepository extends _i1.Mock implements _i7.ArticleRepository {
  MockArticleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<dynamic> getArticle(_i6.Params? params) => (super.noSuchMethod(
        Invocation.method(
          #getArticle,
          [params],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<_i3.ArticleModel> getArticles(_i6.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [params],
        ),
        returnValue: _i5.Future<_i3.ArticleModel>.value(_FakeArticleModel_1(
          this,
          Invocation.method(
            #getArticles,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.ArticleModel>);
}
